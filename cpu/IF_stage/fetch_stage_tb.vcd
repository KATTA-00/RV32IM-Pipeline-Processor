$date
	Wed Jan 22 20:08:09 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fetch_stage_tb $end
$var wire 32 ! pc_out_dec [31:0] $end
$var wire 32 " pc_out [31:0] $end
$var wire 32 # pc_next [31:0] $end
$var wire 32 $ pc_mux_out [31:0] $end
$var wire 32 % instr_out_dec [31:0] $end
$var wire 32 & instr_out [31:0] $end
$var reg 1 ' clk $end
$var reg 32 ( pc_ex [31:0] $end
$var reg 1 ) pc_sel_ex $end
$var reg 1 * rst $end
$scope module if_id_pipeline_reg $end
$var wire 1 ' clk $end
$var wire 1 * rst $end
$var wire 32 + pc_in [31:0] $end
$var wire 32 , instr_in [31:0] $end
$var reg 32 - instr_out [31:0] $end
$var reg 32 . pc_out [31:0] $end
$upscope $end
$scope module imem $end
$var wire 1 ' clk $end
$var wire 1 * rst $end
$var wire 32 / pc [31:0] $end
$var reg 32 0 instr [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ' clk $end
$var wire 1 * rst $end
$var wire 32 1 pc_in [31:0] $end
$var reg 32 2 pc_out [31:0] $end
$upscope $end
$scope module pc_adder $end
$var wire 32 3 pc [31:0] $end
$var wire 32 4 pc_next [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 5 pc_ex [31:0] $end
$var wire 32 6 pc_next [31:0] $end
$var wire 1 ) sel $end
$var wire 32 7 pc [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 7
bx 6
b0 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
0*
0)
b0 (
0'
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5
1*
#10
b100 $
b100 1
b100 7
b100 #
b100 4
b100 6
b0 "
b0 +
b0 /
b0 2
b0 3
1'
#15
0*
#20
0'
#30
b1000 $
b1000 1
b1000 7
b0 !
b0 .
b10010011 &
b10010011 ,
b10010011 0
b1000 #
b1000 4
b1000 6
b100 "
b100 +
b100 /
b100 2
b100 3
1'
#40
0'
#50
b1100 $
b1100 1
b1100 7
b1100 #
b1100 4
b1100 6
b1000 "
b1000 +
b1000 /
b1000 2
b1000 3
b100000000000100010011 &
b100000000000100010011 ,
b100000000000100010011 0
b10010011 %
b10010011 -
b100 !
b100 .
1'
#60
0'
#70
b10000 $
b10000 1
b10000 7
b100000000000100010011 %
b100000000000100010011 -
b1000 !
b1000 .
b1000001000000110110011 &
b1000001000000110110011 ,
b1000001000000110110011 0
b10000 #
b10000 4
b10000 6
b1100 "
b1100 +
b1100 /
b1100 2
b1100 3
1'
#80
0'
#90
b10100 $
b10100 1
b10100 7
b10100 #
b10100 4
b10100 6
b10000 "
b10000 +
b10000 /
b10000 2
b10000 3
b1100010000000100110011 &
b1100010000000100110011 ,
b1100010000000100110011 0
b1000001000000110110011 %
b1000001000000110110011 -
b1100 !
b1100 .
1'
#100
0'
#110
b11000 $
b11000 1
b11000 7
b1100010000000100110011 %
b1100010000000100110011 -
b10000 !
b10000 .
b10000011010000000100011 &
b10000011010000000100011 ,
b10000011010000000100011 0
b11000 #
b11000 4
b11000 6
b10100 "
b10100 +
b10100 /
b10100 2
b10100 3
1'
#120
0'
#130
b11100 $
b11100 1
b11100 7
b11100 #
b11100 4
b11100 6
b11000 "
b11000 +
b11000 /
b11000 2
b11000 3
b1000000001100111 &
b1000000001100111 ,
b1000000001100111 0
b10000011010000000100011 %
b10000011010000000100011 -
b10100 !
b10100 .
1'
#140
0'
#150
b100000 $
b100000 1
b100000 7
b1000000001100111 %
b1000000001100111 -
b11000 !
b11000 .
bx &
bx ,
bx 0
b100000 #
b100000 4
b100000 6
b11100 "
b11100 +
b11100 /
b11100 2
b11100 3
1'
#160
0'
#170
b100100 $
b100100 1
b100100 7
b100100 #
b100100 4
b100100 6
b100000 "
b100000 +
b100000 /
b100000 2
b100000 3
bx %
bx -
b11100 !
b11100 .
1'
#180
0'
#190
b101000 $
b101000 1
b101000 7
b100000 !
b100000 .
b101000 #
b101000 4
b101000 6
b100100 "
b100100 +
b100100 /
b100100 2
b100100 3
1'
#200
0'
#210
b101100 $
b101100 1
b101100 7
b101100 #
b101100 4
b101100 6
b101000 "
b101000 +
b101000 /
b101000 2
b101000 3
b100100 !
b100100 .
1'
#220
0'
#230
b110000 $
b110000 1
b110000 7
b101000 !
b101000 .
b110000 #
b110000 4
b110000 6
b101100 "
b101100 +
b101100 /
b101100 2
b101100 3
1'
#240
0'
#250
b110100 $
b110100 1
b110100 7
b110100 #
b110100 4
b110100 6
b110000 "
b110000 +
b110000 /
b110000 2
b110000 3
b101100 !
b101100 .
1'
#260
0'
#270
b111000 $
b111000 1
b111000 7
b110000 !
b110000 .
b111000 #
b111000 4
b111000 6
b110100 "
b110100 +
b110100 /
b110100 2
b110100 3
1'
#280
0'
#290
b111100 $
b111100 1
b111100 7
b111100 #
b111100 4
b111100 6
b111000 "
b111000 +
b111000 /
b111000 2
b111000 3
b110100 !
b110100 .
1'
#300
0'
#310
b1000000 $
b1000000 1
b1000000 7
b111000 !
b111000 .
b1000000 #
b1000000 4
b1000000 6
b111100 "
b111100 +
b111100 /
b111100 2
b111100 3
1'
#320
0'
#330
b1000100 $
b1000100 1
b1000100 7
b1000100 #
b1000100 4
b1000100 6
b1000000 "
b1000000 +
b1000000 /
b1000000 2
b1000000 3
b111100 !
b111100 .
1'
#340
0'
#350
b1001000 $
b1001000 1
b1001000 7
b1000000 !
b1000000 .
b1001000 #
b1001000 4
b1001000 6
b1000100 "
b1000100 +
b1000100 /
b1000100 2
b1000100 3
1'
#360
0'
#370
b1001100 $
b1001100 1
b1001100 7
b1001100 #
b1001100 4
b1001100 6
b1001000 "
b1001000 +
b1001000 /
b1001000 2
b1001000 3
b1000100 !
b1000100 .
1'
#380
0'
#390
b1010000 $
b1010000 1
b1010000 7
b1001000 !
b1001000 .
b1010000 #
b1010000 4
b1010000 6
b1001100 "
b1001100 +
b1001100 /
b1001100 2
b1001100 3
1'
#400
0'
#410
b1010100 $
b1010100 1
b1010100 7
b1010100 #
b1010100 4
b1010100 6
b1010000 "
b1010000 +
b1010000 /
b1010000 2
b1010000 3
b1001100 !
b1001100 .
1'
#420
0'
#430
b1011000 $
b1011000 1
b1011000 7
b1010000 !
b1010000 .
b1011000 #
b1011000 4
b1011000 6
b1010100 "
b1010100 +
b1010100 /
b1010100 2
b1010100 3
1'
#440
0'
#450
b1011100 $
b1011100 1
b1011100 7
b1011100 #
b1011100 4
b1011100 6
b1011000 "
b1011000 +
b1011000 /
b1011000 2
b1011000 3
b1010100 !
b1010100 .
1'
#460
0'
#470
b1100000 $
b1100000 1
b1100000 7
b1011000 !
b1011000 .
b1100000 #
b1100000 4
b1100000 6
b1011100 "
b1011100 +
b1011100 /
b1011100 2
b1011100 3
1'
#480
0'
#490
b1100100 $
b1100100 1
b1100100 7
b1100100 #
b1100100 4
b1100100 6
b1100000 "
b1100000 +
b1100000 /
b1100000 2
b1100000 3
b1011100 !
b1011100 .
1'
#500
0'
#510
b1101000 $
b1101000 1
b1101000 7
b1100000 !
b1100000 .
b1101000 #
b1101000 4
b1101000 6
b1100100 "
b1100100 +
b1100100 /
b1100100 2
b1100100 3
1'
#515
